searchNodes=[{"doc":"Documentation for Tomba . Tomba: Tomba.io is an Email Finder for B2B sales and email marketing This is the Lua client library for the Email Finder API. It allows you to lookup the following details : Domain Search (Search emails are based on the website You give one domain name and it returns all the email addresses found on the internet.) Email Finder (This API endpoint generates or retrieves the most likely email address from a domain name, a first name and a last name..) Email Verifier (checks the deliverability of a given email address, verifies if it has been found in our database, and returns their sources.) Email Sources (Find email address source somewhere on the web .) Company Domain autocomplete (Company Autocomplete is an API that lets you auto-complete company names and retrieve logo and domain information.)","ref":"Tomba.html","title":"Tomba","type":"module"},{"doc":"Returns information about the current account. Parameters this - Tomba ## Examples {:ok, result} = Tomba.account(Tomba)","ref":"Tomba.html#account/1","title":"Tomba.account/1","type":"function"},{"doc":"","ref":"Tomba.html#account_path/0","title":"Tomba.account_path/0","type":"function"},{"doc":"Company Autocomplete is an API that lets you auto-complete company names and retrieve logo and domain information. Parameters this - Tomba query - A string name company or website. ## Examples {:ok, result} = Tomba.autocomplete(Tomba,&quot;google&quot;)","ref":"Tomba.html#autocomplete/2","title":"Tomba.autocomplete/2","type":"function"},{"doc":"","ref":"Tomba.html#autocomplete_path/0","title":"Tomba.autocomplete_path/0","type":"function"},{"doc":"call to server Parameters this - Tomba path - A string specific path. params - query params","ref":"Tomba.html#call/3","title":"Tomba.call/3","type":"function"},{"doc":"Returns total email addresses we have for one domain. Parameters this - Tomba domain - A string specific domain. ## Examples {:ok, result} = Tomba.count(Tomba,&quot;tomba.io&quot;)","ref":"Tomba.html#count/2","title":"Tomba.count/2","type":"function"},{"doc":"","ref":"Tomba.html#count_path/0","title":"Tomba.count_path/0","type":"function"},{"doc":"","ref":"Tomba.html#default_base_url/0","title":"Tomba.default_base_url/0","type":"function"},{"doc":"A shortcut for request(:delete, url, options) .","ref":"Tomba.html#delete/2","title":"Tomba.delete/2","type":"function"},{"doc":"A shortcut for request!(:delete, url, options) .","ref":"Tomba.html#delete!/2","title":"Tomba.delete!/2","type":"function"},{"doc":"Search emails are based on the website You give one domain name and it returns all the email addresses found on the internet. Parameters this - Tomba domain - A string specific domain. ## Examples {:ok, result} = Tomba.domain_search(Tomba,&quot;tomba.io&quot;)","ref":"Tomba.html#domain_search/2","title":"Tomba.domain_search/2","type":"function"},{"doc":"Generates or retrieves the most likely email address from a domain name, a first name and a last name. Parameters this - Tomba domain - A string domain name of the company, used for emails. For example, &quot;tomba.com&quot;. fname - A string The person's first name. It doesn't need to be in lowercase. lname - A string The person's last name. It doesn't need to be in lowercase. ## Examples {:ok, result} = Tomba.email_finder(Tomba,&quot;stripe.com&quot;, &quot;fname&quot;, &quot;lname&quot;)","ref":"Tomba.html#email_finder/4","title":"Tomba.email_finder/4","type":"function"},{"doc":"Find email address source somewhere on the web. Parameters this - Tomba email - A string email address you want to find sources. ## Examples {:ok, result} = Tomba.email_sources(Tomba,&quot;b.mohamed@tomba.io&quot;)","ref":"Tomba.html#email_sources/2","title":"Tomba.email_sources/2","type":"function"},{"doc":"Verify the deliverability of an email address. Parameters this - Tomba email - A string email address you want to verify. ## Examples {:ok, result} = Tomba.email_verifier(Tomba,&quot;b.mohamed@tomba.io&quot;)","ref":"Tomba.html#email_verifier/2","title":"Tomba.email_verifier/2","type":"function"},{"doc":"","ref":"Tomba.html#finder_path/0","title":"Tomba.finder_path/0","type":"function"},{"doc":"A shortcut for request(:get, url, options) .","ref":"Tomba.html#get/2","title":"Tomba.get/2","type":"function"},{"doc":"A shortcut for request!(:get, url, options) .","ref":"Tomba.html#get!/2","title":"Tomba.get!/2","type":"function"},{"doc":"","ref":"Tomba.html#handle_response/1","title":"Tomba.handle_response/1","type":"function"},{"doc":"A shortcut for request(:head, url, options) .","ref":"Tomba.html#head/2","title":"Tomba.head/2","type":"function"},{"doc":"A shortcut for request!(:head, url, options) .","ref":"Tomba.html#head!/2","title":"Tomba.head!/2","type":"function"},{"doc":"","ref":"Tomba.html#is_redirect/1","title":"Tomba.is_redirect/1","type":"function"},{"doc":"Returns a your last 1,000 requests you made during the last 3 months. Parameters this - Tomba ## Examples {:ok, result} = Tomba.logs(Tomba)","ref":"Tomba.html#logs/1","title":"Tomba.logs/1","type":"function"},{"doc":"","ref":"Tomba.html#logs_path/0","title":"Tomba.logs_path/0","type":"function"},{"doc":"Tomba Constructor Parameters key - Tomba api key. secret - Tomba secret key.","ref":"Tomba.html#new/2","title":"Tomba.new/2","type":"function"},{"doc":"A shortcut for request(:options, url, options) .","ref":"Tomba.html#options/2","title":"Tomba.options/2","type":"function"},{"doc":"A shortcut for request!(:options, url, options) .","ref":"Tomba.html#options!/2","title":"Tomba.options!/2","type":"function"},{"doc":"A shortcut for request(:patch, url, options) .","ref":"Tomba.html#patch/2","title":"Tomba.patch/2","type":"function"},{"doc":"A shortcut for request!(:patch, url, options) .","ref":"Tomba.html#patch!/2","title":"Tomba.patch!/2","type":"function"},{"doc":"A shortcut for request(:post, url, options) .","ref":"Tomba.html#post/2","title":"Tomba.post/2","type":"function"},{"doc":"A shortcut for request!(:post, url, options) .","ref":"Tomba.html#post!/2","title":"Tomba.post!/2","type":"function"},{"doc":"","ref":"Tomba.html#process_options/1","title":"Tomba.process_options/1","type":"function"},{"doc":"","ref":"Tomba.html#process_request_body/1","title":"Tomba.process_request_body/1","type":"function"},{"doc":"","ref":"Tomba.html#process_request_headers/1","title":"Tomba.process_request_headers/1","type":"function"},{"doc":"","ref":"Tomba.html#process_request_headers/2","title":"Tomba.process_request_headers/2","type":"function"},{"doc":"","ref":"Tomba.html#process_request_headers/3","title":"Tomba.process_request_headers/3","type":"function"},{"doc":"","ref":"Tomba.html#process_response_body/1","title":"Tomba.process_response_body/1","type":"function"},{"doc":"","ref":"Tomba.html#process_response_body/2","title":"Tomba.process_response_body/2","type":"function"},{"doc":"","ref":"Tomba.html#process_response_chunk/1","title":"Tomba.process_response_chunk/1","type":"function"},{"doc":"","ref":"Tomba.html#process_response_headers/1","title":"Tomba.process_response_headers/1","type":"function"},{"doc":"","ref":"Tomba.html#process_response_location/1","title":"Tomba.process_response_location/1","type":"function"},{"doc":"","ref":"Tomba.html#process_status_code/1","title":"Tomba.process_status_code/1","type":"function"},{"doc":"","ref":"Tomba.html#process_url/1","title":"Tomba.process_url/1","type":"function"},{"doc":"","ref":"Tomba.html#process_url/2","title":"Tomba.process_url/2","type":"function"},{"doc":"A shortcut for request(:put, url, options) .","ref":"Tomba.html#put/2","title":"Tomba.put/2","type":"function"},{"doc":"A shortcut for request!(:put, url, options) .","ref":"Tomba.html#put!/2","title":"Tomba.put!/2","type":"function"},{"doc":"","ref":"Tomba.html#redirect_method/2","title":"Tomba.redirect_method/2","type":"function"},{"doc":"Sends an HTTP request. See the type documentation of http_opts for a description of options.","ref":"Tomba.html#request/3","title":"Tomba.request/3","type":"function"},{"doc":"","ref":"Tomba.html#request/5","title":"Tomba.request/5","type":"function"},{"doc":"Like request/3 , but raises HTTPotion.HTTPError if failed.","ref":"Tomba.html#request!/3","title":"Tomba.request!/3","type":"function"},{"doc":"","ref":"Tomba.html#request_direct/6","title":"Tomba.request_direct/6","type":"function"},{"doc":"","ref":"Tomba.html#response_ok/1","title":"Tomba.response_ok/1","type":"function"},{"doc":"","ref":"Tomba.html#search_path/0","title":"Tomba.search_path/0","type":"function"},{"doc":"","ref":"Tomba.html#sources_path/0","title":"Tomba.sources_path/0","type":"function"},{"doc":"Starts a linked worker process for use with the direct option.","ref":"Tomba.html#spawn_link_worker_process/2","title":"Tomba.spawn_link_worker_process/2","type":"function"},{"doc":"Starts a worker process for use with the direct option.","ref":"Tomba.html#spawn_worker_process/2","title":"Tomba.spawn_worker_process/2","type":"function"},{"doc":"Ensures that HTTPotion and its dependencies are started.","ref":"Tomba.html#start/0","title":"Tomba.start/0","type":"function"},{"doc":"Returns domain status if is webmail or disposable. Parameters this - Tomba domain - A string specific path. ## Examples {:ok, result} = Tomba.status(Tomba,&quot;gmail.com&quot;)","ref":"Tomba.html#status/2","title":"Tomba.status/2","type":"function"},{"doc":"","ref":"Tomba.html#status_path/0","title":"Tomba.status_path/0","type":"function"},{"doc":"Stops a worker process started with spawn_worker_process/2 or spawn_link_worker_process/2 .","ref":"Tomba.html#stop_worker_process/1","title":"Tomba.stop_worker_process/1","type":"function"},{"doc":"","ref":"Tomba.html#transformer/4","title":"Tomba.transformer/4","type":"function"},{"doc":"Check your monthly requests. Parameters this - Tomba ## Examples {:ok, result} = Tomba.usage(Tomba)","ref":"Tomba.html#usage/1","title":"Tomba.usage/1","type":"function"},{"doc":"","ref":"Tomba.html#usage_path/0","title":"Tomba.usage_path/0","type":"function"},{"doc":"","ref":"Tomba.html#verifier_path/0","title":"Tomba.verifier_path/0","type":"function"},{"doc":"List of options to all request functions. body - request body headers - HTTP headers (e.g. [&quot;Accept&quot;: &quot;application/json&quot;] ) query - URL query string (e.g. %{page: 1} ) timeout - timeout in milliseconds basic_auth - basic auth credentials (e.g. {&quot;user&quot;, &quot;password&quot;} ) stream_to - if you want to make an async request, reference to the process direct - if you want to use ibrowse's direct feature, reference to the worker spawned by ` spawn_worker_process / 2 ` or ` spawn_link_worker_process / 2 ` ibrowse - options for ibrowse auto_sni - if true and the URL is https, configures the server_name_indication ibrowse/ssl option to be the host part of the requestedURL follow_redirects - if true and a response is a redirect, re-requests with header[:Location]","ref":"Tomba.html#t:http_opts/0","title":"Tomba.http_opts/0","type":"type"},{"doc":"Result returned from request/3 , get/2 , post/2 , put/2 , etc.","ref":"Tomba.html#t:http_result/0","title":"Tomba.http_result/0","type":"type"},{"doc":"Result returned from request!/3 , get!/2 , post!/2 , put!/2 , etc.","ref":"Tomba.html#t:http_result_bang/0","title":"Tomba.http_result_bang/0","type":"type"},{"doc":"Tomba email finder elixir Client Library Tomba: Tomba.io is an Email Finder for B2B sales and email marketing This is the Lua client library for the Email Finder API. It allows you to lookup the following details : Domain Search (Search emails are based on the website You give one domain name and it returns all the email addresses found on the internet.) Email Finder (This API endpoint generates or retrieves the most likely email address from a domain name, a first name and a last name..) Email Verifier (checks the deliverability of a given email address, verifies if it has been found in our database, and returns their sources.) Email Sources (Find email address source somewhere on the web .) Company Domain autocomplete (Company Autocomplete is an API that lets you auto-complete company names and retrieve logo and domain information.) Documentation for Domain validation.","ref":"Validation.Domainvalidation.html","title":"Validation.Domainvalidation","type":"module"},{"doc":"Helper method for validating domain name ## Parameters domain - passing in a single website name domain name","ref":"Validation.Domainvalidation.html#validate/1","title":"Validation.Domainvalidation.validate/1","type":"function"},{"doc":"Tomba email finder elixir Client Library Tomba: Tomba.io is an Email Finder for B2B sales and email marketing This is the Lua client library for the Email Finder API. It allows you to lookup the following details : Domain Search (Search emails are based on the website You give one domain name and it returns all the email addresses found on the internet.) Email Finder (This API endpoint generates or retrieves the most likely email address from a domain name, a first name and a last name..) Email Verifier (checks the deliverability of a given email address, verifies if it has been found in our database, and returns their sources.) Email Sources (Find email address source somewhere on the web .) Company Domain autocomplete (Company Autocomplete is an API that lets you auto-complete company names and retrieve logo and domain information.) Documentation for Key validation.","ref":"Validation.Keyvalidation.html","title":"Validation.Keyvalidation","type":"module"},{"doc":"Helper method for validating tomba key and secret ## Parameters str - Tomba api key or api secret.","ref":"Validation.Keyvalidation.html#validate/1","title":"Validation.Keyvalidation.validate/1","type":"function"},{"doc":"This is the official elixir client library for the Tomba.io Email Finder API, allowing you to: Domain Search (Search emails are based on the website You give one domain name and it returns all the email addresses found on the internet.) Email Finder (This API endpoint generates or retrieves the most likely email address from a domain name, a first name and a last name..) Email Verifier (checks the deliverability of a given email address, verifies if it has been found in our database, and returns their sources.) Email Sources (Find email address source somewhere on the web .) Company Domain autocomplete (Company Autocomplete is an API that lets you auto-complete company names and retrieve logo and domain information.)","ref":"readme.html","title":"<img src=\"https://app.tomba.io/logo.svg\" alt=\"Tomba\" width=\"25\"/> Tomba Email Finder elixir Client Library","type":"extras"},{"doc":"Collect publicly available emails online (Html, execute JavaScript,files,). No duplicate email No duplicate domain . No webmail like Gmail,Outlook and the others. We detect 15 type of hashes and remove them. No disposable and temporary email address.","ref":"readme.html#features","title":"<img src=\"https://app.tomba.io/logo.svg\" alt=\"Tomba\" width=\"25\"/> Tomba Email Finder elixir Client Library - Features","type":"extras"},{"doc":"You'll need an Tomba API access token, which you can get by signing up for a free account at https://app.tomba.io/auth/register The free plan is limited to 25 search request and 50 verification a month, To enable all the data fields and additional request volumes see https://tomba.io/pricing .","ref":"readme.html#getting-started","title":"<img src=\"https://app.tomba.io/logo.svg\" alt=\"Tomba\" width=\"25\"/> Tomba Email Finder elixir Client Library - Getting Started","type":"extras"},{"doc":"the package can be installed by adding tomba to your list of dependencies in mix.exs : def deps do [ { :tomba , &quot;~&gt; 0.1.0&quot; } ] end And fetch your project's dependencies: mix deps.get","ref":"readme.html#installation","title":"<img src=\"https://app.tomba.io/logo.svg\" alt=\"Tomba\" width=\"25\"/> Tomba Email Finder elixir Client Library - Installation","type":"extras"},{"doc":"Domain Search get email addresses found on the internet. conf = Tomba . new ( &quot;ta_xxxx&quot; , &quot;ts_xxxx&quot; ) { :ok , result } = Tomba . domain_search ( Tomba , &quot;tomba.io&quot; ) Email Finder Find the verified email address of any professional. conf = Tomba . new ( &quot;ta_xxxx&quot; , &quot;ts_xxxx&quot; ) { :ok , result } = Tomba . email_finder ( Tomba , &quot;stripe.com&quot; , &quot;fname&quot; , &quot;lname&quot; ) Email Verifier Verify the validity of any professional email address with the most complete email checker. conf = Tomba . new ( &quot;ta_xxxx&quot; , &quot;ts_xxxx&quot; ) { :ok , result } = Tomba . email_verifier ( Tomba , &quot;b.mohamed@tomba.io&quot; )","ref":"readme.html#usage","title":"<img src=\"https://app.tomba.io/logo.svg\" alt=\"Tomba\" width=\"25\"/> Tomba Email Finder elixir Client Library - Usage","type":"extras"},{"doc":"See the official documentation . Other Libraries There are official Tomba Email Finder client libraries available for many languages including PHP, Python, Go, Java, Ruby, and many popular frameworks such as Django, Rails and Laravel. There are also many third party libraries and integrations available for our API. https://developer.tomba.io/#introduction-libraries About Tomba Founded in 2020, Tomba prides itself on being the most reliable, accurate, and in-depth source of Email address data available anywhere. We process terabytes of data to produce our Email finder API, company.","ref":"readme.html#documentation","title":"<img src=\"https://app.tomba.io/logo.svg\" alt=\"Tomba\" width=\"25\"/> Tomba Email Finder elixir Client Library - Documentation","type":"extras"},{"doc":"Fork it ( https://github.com/tomba-io/elixir/fork ) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","ref":"readme.html#contribution","title":"<img src=\"https://app.tomba.io/logo.svg\" alt=\"Tomba\" width=\"25\"/> Tomba Email Finder elixir Client Library - Contribution","type":"extras"},{"doc":"Please see the Apache 2.0 license file for more information.","ref":"readme.html#license","title":"<img src=\"https://app.tomba.io/logo.svg\" alt=\"Tomba\" width=\"25\"/> Tomba Email Finder elixir Client Library - License","type":"extras"}]